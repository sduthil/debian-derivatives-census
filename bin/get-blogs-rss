#!/usr/bin/perl

# Copyright 2011 Paul Wise
# Released under the MIT/Expat license, see doc/COPYING

# Downloads the blog web pages and detects available RSS/Atom feeds using
# standard automatic feed discovery, which is documented here:
#
# http://www.rssboard.org/rss-autodiscovery
#
# Usage:
# get-blogs-rss <blog URL> <feed output file>

use LWP::Simple;
use File::Compare;
use File::Temp qw(tempfile);
use XML::Feed;

my $ca_dir = '/etc/ssl/ca-global';
$ENV{PERL_LWP_SSL_CA_PATH} = $ca_dir if -d $ca_dir;

my @feeds;
my $blog_count = 0;

# Exit if there are no blogs to check
-s $ARGV[0] or exit 0;

# Iterate through all the blogs
open( FILE, "< $ARGV[0]" ) or die "Cannot open $ARGV[0]";
while( <FILE> ) {
	chomp;
	next if /^$/;
	my $url = $_;
	$blog_count++;
	my ($feed) = XML::Feed->find_feeds($_);
	push @feeds, $feed;
}
close FILE;

# Check the feed count
my $feed_count = @feeds;
$feed_count == $blog_count or die "Different number of feeds ($feed_count) to blogs ($blog_count)";

# Write out the temporary file
my ($tmp_fh, $tmp) = tempfile( $ARGV[1].".tmp.XXXXXXXXXXXXXX" );
open (FILE, "> $tmp") or die "Cannot open temporary file $tmp";
print FILE join("\n", @feeds);
close (FILE);

# Put the temporary file in place
if (compare($tmp,$ARGV[1]) == 0) {
	unlink($tmp);
} else {
	my $dummy = $tmp.".dummy";
	open (FILE, "> $dummy");
	close (FILE);
	my ($dev, $ino, $mode, @junk) = stat $dummy;
	$mode &= 07777;
	chmod($mode,$tmp);
	unlink($dummy);
	rename($tmp,$ARGV[1]);
}
