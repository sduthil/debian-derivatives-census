#!/usr/bin/python

import os
import sys
import debian.deb822
import apt_pkg
import psycopg2

# Init
apt_pkg.init()

# Setup configuration
apt_pkg.config.set('Dir', os.path.abspath(sys.argv[2]))
apt_pkg.config.set('Dir::Etc', os.path.abspath(sys.argv[2]))
apt_pkg.config.set('Dir::State', os.path.abspath(sys.argv[2]))
apt_pkg.config.set('Dir::Cache', os.path.abspath(sys.argv[2]))
apt_pkg.config.set('Dir::State::status', os.path.abspath(os.path.join(sys.argv[2],'status')))
apt_pkg.config.set('Dir::Etc::sourcelist', os.path.abspath(sys.argv[1]))
apt_pkg.config.set('Dir::Bin::gpg', 'fakegpgv')

# Preparation
sources_list = apt_pkg.SourceList()
sources_list.read_main_list()
conn = psycopg2.connect("host=localhost port=5433 dbname=snapshot user=guest")
cur = conn.cursor()

# Voodoo
lists_dir = apt_pkg.config.find_dir('Dir::State::lists')
source_entries = [[i for i in x.index_files if i.label=='Debian Source Index'] for x in sources_list.list]
modified_packages = {}

for source in source_entries:
	for s in source:
		fn = os.path.join(lists_dir, s.describe.rstrip(')').rpartition('(')[2])
		f = file(fn)
		for srcpkg in debian.deb822.Sources.iter_paragraphs(f):
			name = srcpkg['Package']
			version = srcpkg['Version']
			if 'Checksums-Sha1' not in srcpkg:
				continue
			dsc = [x for x in srcpkg['Checksums-Sha1'] if x['name'].endswith('.dsc')]
			if not len(dsc):
				continue
			elif len(dsc) > 1:
				continue
			else:
				dsc = dsc[0]
			hash = dsc['sha1']
			cur.execute('SELECT count(hash) FROM file WHERE hash=%s;', (hash,))
			if not cur.fetchone()[0]:
				modified = 0
				for part in [x for x in srcpkg['Checksums-Sha1'] if not x['name'].endswith('.dsc')]:
					hash = part['sha1']
					cur.execute('SELECT count(hash) FROM file WHERE hash=%s;', (hash,))
					modified += cur.fetchone()[0]
				if modified:
					url = '%s/%s' % (s.archive_uri(srcpkg['Directory']), dsc['name'])
					if name not in modified_packages:
						modified_packages[name] = [url,]
					else:
						modified_packages[name].append(url)
		f.close()

if modified_packages:
	output = file(os.path.abspath(sys.argv[3]), 'wb')
	for name, srcpkgs in modified_packages.items():
		if name and srcpkgs:
			print >>output, '%s:' % name
			for dsc in srcpkgs:
				print >>output, '\tdsc: %s' % dsc
			print >>output
	output.close()
